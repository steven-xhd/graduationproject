<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.waterpurifiermanagementsystem.mapper.ServiceRecordMapper">
  <resultMap id="BaseResultMap" type="com.example.waterpurifiermanagementsystem.pojo.ServiceRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customerid" jdbcType="INTEGER" property="customerid" />
    <result column="employeeid" jdbcType="INTEGER" property="employeeid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="DATE" property="time" />
  </resultMap>
  <sql id="Base_Column_List">
    id, customerid, employeeid, content, time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from servicerecord
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from servicerecord
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.waterpurifiermanagementsystem.pojo.ServiceRecord">
    insert into servicerecord (id, customerid, employeeid, 
      content, time)
    values (#{id,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER}, #{employeeid,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{time,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.example.waterpurifiermanagementsystem.pojo.ServiceRecord">
    insert into servicerecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerid != null">
        customerid,
      </if>
      <if test="employeeid != null">
        employeeid,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="employeeid != null">
        #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.waterpurifiermanagementsystem.pojo.ServiceRecord">
    update servicerecord
    <set>
      <if test="customerid != null">
        customerid = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="employeeid != null">
        employeeid = #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.waterpurifiermanagementsystem.pojo.ServiceRecord">
    update servicerecord
    set customerid = #{customerid,jdbcType=INTEGER},
      employeeid = #{employeeid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultType="com.example.waterpurifiermanagementsystem.vo.ServiceRecordExample">
SELECT c.*,b.cusname,content,b.tel as custel,time from servicerecord a
LEFT JOIN customer b ON a.customerid = b.id
LEFT JOIN (SELECT a.id,a.name,a.tel,b.depname,c.name as companyname from employee a
LEFT JOIN department b on a.depid = b.id
LEFT JOIN company c on a.companyid = c.id) c on a.employeeid = c.id
  </select>
</mapper>