<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.waterpurifiermanagementsystem.mapper.MaterialMapper">
  <resultMap id="BaseResultMap" type="com.example.waterpurifiermanagementsystem.pojo.Material">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="typeid" jdbcType="INTEGER" property="typeid" />
    <result column="unitid" jdbcType="INTEGER" property="unitid" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="supplierid" jdbcType="INTEGER" property="supplierid" />
    <result column="storeid" jdbcType="INTEGER" property="storeid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, typeid, unitid, count, supplierid, storeid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from material
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from material
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.waterpurifiermanagementsystem.pojo.Material">
    insert into material (id, typeid, unitid, 
      count, supplierid, storeid
      )
    values (#{id,jdbcType=INTEGER}, #{typeid,jdbcType=INTEGER}, #{unitid,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{supplierid,jdbcType=INTEGER}, #{storeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.waterpurifiermanagementsystem.pojo.Material">
    insert into material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typeid != null">
        typeid,
      </if>
      <if test="unitid != null">
        unitid,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="supplierid != null">
        supplierid,
      </if>
      <if test="storeid != null">
        storeid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="unitid != null">
        #{unitid,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="supplierid != null">
        #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="storeid != null">
        #{storeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.waterpurifiermanagementsystem.pojo.Material">
    update material
    <set>
      <if test="typeid != null">
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="unitid != null">
        unitid = #{unitid,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="supplierid != null">
        supplierid = #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="storeid != null">
        storeid = #{storeid,jdbcType=INTEGER},
      </if>
    </set>
    where <if test="id != null">id = #{id,jdbcType=INTEGER} or</if> typeid = #{typeid} and unitid = #{unitid} and supplierid = #{supplierid} and storeid = #{storeid}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.waterpurifiermanagementsystem.pojo.Material">
    update material
    set typeid = #{typeid,jdbcType=INTEGER},
      unitid = #{unitid,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      supplierid = #{supplierid,jdbcType=INTEGER},
      storeid = #{storeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultType="com.example.waterpurifiermanagementsystem.vo.MaterialExample">
    SELECT a.id,storeid,b.typename,c.unit,d.name as suppliername,count,b.id as typeid,c.id as unitid,d.id as supplierid from material a
    LEFT JOIN materialtype b on a.typeid = b.id
    LEFT JOIN units c on a.unitid = c.id
    LEFT JOIN supplier d on a.supplierid = d.id order by id desc
  </select>
</mapper>