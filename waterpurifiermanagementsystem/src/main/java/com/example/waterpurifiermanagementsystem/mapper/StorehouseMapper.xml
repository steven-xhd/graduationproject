<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.waterpurifiermanagementsystem.mapper.StorehouseMapper">
  <resultMap id="BaseResultMap" type="storehouse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="companyid" jdbcType="INTEGER" property="companyid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="materialid" jdbcType="INTEGER" property="materialid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, companyid, name, materialid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from storehouse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from storehouse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="storehouse">
    insert into storehouse (id, companyid, name, 
      materialid)
    values (#{id,jdbcType=INTEGER}, #{companyid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{materialid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="storehouse">
    insert into storehouse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyid != null">
        companyid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="materialid != null">
        materialid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="materialid != null">
        #{materialid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="storehouse">
    update storehouse
    <set>
      <if test="companyid != null">
        companyid = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="materialid != null">
        materialid = #{materialid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="storehouse">
    update storehouse
    set companyid = #{companyid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      materialid = #{materialid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultType="com.example.waterpurifiermanagementsystem.vo.StoreHouseExample">
    SELECT a.id,e.name,companyname, b.typename,c.unit,SUM(count) as count
    from material a
    LEFT JOIN materialtype b on a.typeid = b.id
    LEFT JOIN units c on a.unitid = c.id
    LEFT JOIN supplier d on a.supplierid = d.id
    LEFT JOIN (SELECT a.id,a.name,b.name as companyname from storehouse a LEFT JOIN company b on a.companyid = b.id ) e on a.storeid = e.id
    GROUP BY name,typename ORDER BY id desc
  </select>
  <select id="findStoreHouse" resultType="storehouse">
    select * from storehouse
  </select>
</mapper>